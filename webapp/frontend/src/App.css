.App {
  margin: 0px;
  padding: 0px;
  overflow-x: hidden;
}

.outer-container {
  overflow-x: hidden;
  overflow-y: hidden;
}
  
html, body {
  width: 100%;
  height: 100%;
  background-color: #F7F7F2;
}

img {
  border-radius: 5px;
}

.grid-container {
  padding-bottom: 30px;
}

.card {
  /* Add shadows to create the "card" effect */
  aspect-ratio: 4 / 3;
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
  border-radius: 5px; /* 5px rounded corners */
  position: relative;
  width: 100%;
}

.card-background {
  object-fit: cover;
  width: 100%;
  height: 100%;
}

/* On mouse-over, add a deeper shadow */
.card:hover {
  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.35);
}

.edit-card {
  aspect-ratio: 4 / 3;
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
  border-radius: 5px; /* 5px rounded corners */
  background-color: #F7F7F2;
  width: 100%;
  height: 100%;
  padding: 8px;
  vertical-align: middle;
  overflow: auto;
}

.edit-card > form {
  text-align: center;
}

.edit-card > form > * {
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 8px;
}

.input-wrapper > div {
  width: 100px;
}

.edit-card > form > p {
  font-size: 18px;
}

.edit-card > form > button {
  display: inline-block;
  margin-right: 4px;
}

.parameter-grid {
  display: grid;
  gap: 4px;
  grid-template-columns: auto 1fr;
  margin: 0 0 1rem 0;
  padding-left: 4px;
  padding-right: 4px;
}

.parameter-grid > label {
  text-align: right;
  padding-right: 4px;
}

.input-container > input {
  width: 100%;
}

/* Add some padding inside the card container */
.container {
  padding: 8px 8px;
  position: absolute;
  bottom: 0px;
  left: 0px;
}

.container > h4 {
  color: #F7F7F2;
  display: block;
  margin-bottom: 0px;
}

.container > p {
  color: #F7F7F2;
  display: block;
}

.edit-button {
  position: absolute;
  top: 8px;
  right: 8px;
  width: 25px;
  height: 25px;
}

.cross {
  margin: 0;
  padding: 0;
  border: 0;
  background: none;
  position: relative;
  width: 15px;
  height: 15px;
}

.cross:before,.cross:after {
    content: '';
    position: absolute;
    top: (15px - 5px) / 2;
    left: 0;
    right: 0;
    height: 5px;
    border-radius: 5px;
  }

.cross:before {
    transform: rotate(45deg);
}

.cross:after {
    transform: rotate(-45deg);
}

.cross > span {
    display: block;
}

.btn-close {
  margin: 4px;
  border: 0;
  padding: 0;
  background: hsl(216, 100, 50);
  border-radius: 50%;
  width: 15px;
  height: 15px;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: all 150ms;
  float: right;
}

.btn-close:hover,.btn-close:focus {
    transform: rotateZ(90deg);
    background: hsl(216, 100, 40);
  }

.error-message {
  position: fixed;
  left: 50%;
  margin-top: 16px;
  transform: translate(-50%, 0);
  background-color: #fda9a9;
  padding: 8px;
  padding-bottom: 10px;
  width: 90%;
  max-width: 600px;
  border-radius: 4px;
  z-index: 1;
  text-align: center;
}

.error-message-close {
  float: right;
  font-size: 32px;
}

.run-click-animation {
  animation: clickAnimation 0.2s;
}

@keyframes clickAnimation {
  0% {transform: scale(1.0);}
  50% {transform: scale(0.9);}
  100% {transform: scale(1.0);}
}